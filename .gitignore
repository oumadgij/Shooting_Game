R4_GP2-4
ITエンジニア科ゲームプログラムコース2年（4年課程）
ストリーム
授業
メンバー
「R4_GP2-4 ITエンジニア科ゲームプログラムコース2年（4年課程）」の授業
メインメニュー
資料
科目・講師アンケート
投稿日: 9:22
資料
【ゲームジャム（夏）】ビルドデータの提出先について
投稿日: 7月27日
資料
【ゲームジャム（夏）】プレゼン会で使用する「スライドのテンプレート」について
最終編集: 7月26日
資料
【ゲームジャム（夏）】制作期間中の授業スケジュールについて
最終編集: 7月27日
資料
【ゲームジャム（夏）】概要説明資料について
投稿日: 7月22日
資料
ゲームキャンプ　メンバー/テーマ発表資料
投稿日: 7月22日
質問
【参加確認】Unreal Engine Education Summit
期限: 5月27日
作品制作
作品制作
資料
パックマン資料
投稿日: 8月1日
資料
【Trelloを使ってみよう】
投稿日: 8月1日
資料
リンゴ落としゲーム仕様書
投稿日: 6月8日
資料
バージョン管理システム
投稿日: 6月6日

【実際にGitを使ってみよう①】
Google スライド

【バージョン管理ツール】
Google スライド

【実際にGitを使ってみよう②】
Google スライド

gitignoreの中身(VisualStudio版).txt
テキスト
ITパスポート
ITパスポート
資料
令和3年　ITパスポート過去問題
最終編集: 6月9日
資料
令和2年　ITパスポート過去問題
最終編集: 6月7日
資料
ITパスポート過去問
投稿日: 5月16日
資料
テクノロジー系
投稿日: 4月25日
資料
H30マネジメント解説
投稿日: 4月25日
ゲーム数学
ゲーム数学
完了 課題
行列・力学練習問題
期限なし
資料
力学
投稿日: 5月30日
資料
行列
投稿日: 5月9日
完了 課題
ベクトル練習問題
期限なし
資料
ベクトル
投稿日: 4月15日
完了 課題
三角比・三角関数練習問題
期限なし
資料
三角比・三角関数
投稿日: 4月8日
完了 課題
三平方の定理　練習問題提出
期限なし
資料
三平方の定理
最終編集: 4月6日
資料
ゲーム数学初回
投稿日: 4月6日
PGⅡ
PGⅡ
完了 質問
【アンケート３】
期限: 5月23日
完了 課題
【アンケート】どうやったらC++の内容覚えられるかなー
期限: 5月24日
資料
教科書
最終編集: 9月13日
資料
授業資料
最終編集: 6月15日
PGⅡ 課題
PGⅡ 課題
課題
後期シューティング操作方法とゲーム案
期限なし
資料
【資料】C++後期制作課題　
最終編集: 11:53
完了 課題
シーンマネージャ最終チェック提出場
期限: 9月25日
完了 課題
シーンマネージャーを実装してみよう
期限: 7月1日
完了 課題
名前空間テスト
期限: 6月15日
完了 課題
静的メンバ変数テスト
期限: 6月7日
完了 課題
「え！？」テスト
期限: 6月1日
完了 課題
this・演算子オーバーロード　テスト
期限: 5月26日
完了 課題
【練習】this・演算子オーバーロード確認問題　選択ver
期限: 5月25日
完了 課題
【C++】小テスト１－４
期限: 5月17日
UE4_Ⅱ
UE4_Ⅱ
資料
資料
最終編集: 4月20日
完了 課題
テスト２
期限: 4月11日
完了 課題
テスト１
期限: 4月11日
完了 課題
小テスト１
期限: 4月6日
UE4Ⅱ 課題
UE4Ⅱ 課題
課題
【UE4】演習課題9-2
期限なし
課題
【UE4】演習課題9-1
期限なし
完了 課題
【UE4】演習課題8-2
期限: 9月9日
完了 課題
【UE4】演習課題8-1
期限: 9月9日
完了 課題
【UE4】演習課題7-2
期限なし
完了 課題
【UE4】演習課題7-1
期限なし
完了 課題
レクチャー５の制作課題
期限: 6月12日
完了 課題
【UE4】演習課題５-2
期限: 4月28日
完了 課題
【UE4】演習課題５-1
期限: 4月28日
完了 課題
【UE4】演習課題４-2
期限: 4月14日
ホームルーム
ホームルーム
資料
【案内】ホームルームの連絡事項について
最終編集: 6月29日
連絡事項
連絡事項
資料
◆アルバイトを始める前に知っておきたいポイント
投稿日: 8月16日
資料
【案内】6/8（水）実施の「金融セミナー」について
投稿日: 6月6日
資料
【案内】「任天堂」制作企画系オンラインセミナーについて
最終編集: 6月3日
完了 質問
【依頼】情スぺ4年次の「卒業研究」アンケートについて
期限: 6月2日 15:00
資料
【案内】個別ガイダンスの日程について
投稿日: 4月25日
資料
【最重要】4/26（火）実施の健康診断について
最終編集: 4月25日
完了 質問
【最重要】「2022年度kbc事務局Classroom」の登録について
期限: 4月8日 17:00
完了 質問
【最重要】paizaのフリーパス登録について
期限: 4月15日 17:00
時間割
時間割
資料
【案内】10/3週の時間割について
2
2 件のコメント
最終編集: 10月1日
資料
【案内】9/19週の時間割について
投稿日: 9月16日
資料
【案内】9/12週の時間割について
投稿日: 9月10日
資料
【案内】9/5週の時間割について
投稿日: 9月2日
資料
【案内】8/29週の時間割について
投稿日: 8月26日
資料
【案内】8/8週の時間割について
投稿日: 8月6日
資料
【案内】7/25週の時間割について
投稿日: 7月23日
資料
【案内】7/18週の時間割について
投稿日: 7月18日
資料
【案内】7/11週の時間割について
投稿日: 7月8日
資料
【案内】7/4週の時間割について
投稿日: 7月3日
申請書関連
申請書関連
資料
【申請】公欠届について
投稿日: 4月7日
掲示物関連
掲示物関連
資料
【案内】2022年度の「年間スケジュール」について
投稿日: 7月11日
# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd
gitignoreの中身 ... Studio版).txt
gitignoreの中身(VisualStudio版).txt を表示しています。